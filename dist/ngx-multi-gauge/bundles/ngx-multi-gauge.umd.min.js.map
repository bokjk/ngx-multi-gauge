{"version":3,"sources":["ng://ngx-multi-gauge/lib/ngx-multi-gauge.service.ts","ng://ngx-multi-gauge/lib/ngx-multi-gauge.component.ts","ng://ngx-multi-gauge/lib/ngx-multi-gauge.module.ts"],"names":["NgxMultiGaugeService","Injectable","args","providedIn","NgxMultiGaugeComponent","prototype","ngOnInit","_this_1","this","rawData","map","v","sampleTitleEn","push","title_en","sampleTitleKr","title_kr","sampleData","value","totalValue","_CHART","CHART1","nativeElement","svg","d3.select","append","attr","width","height","arcs","i","inner_calc","center_circle_size","list_margin","line_width","outer_calc","d3.arc","innerRadius","outerRadius","cornerRadius","padAngle","padRadius","emptyPieData","angle_max","arc","pieData","pie","d3.pie","sort","d","selectAll","data","enter","classed","bg_color","g","line_color","each","index","_this","r","centroid","startAngle","endAngle","title_centroid","text","radius","Component","selector","template","ViewChild","Input","NgxMultiGaugeModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMultiGaugeService {\n\n  constructor() { }\n}\n","import {Component, OnInit, ViewChild, Input, ElementRef, AfterViewInit} from '@angular/core';\nimport * as d3 from 'd3';\n\n\n@Component({\n  selector: 'NgxMultiGauge',\n  templateUrl: './ngx-multi-gauge.component.html',\n  styleUrls: ['./ngx-multi-gauge.component.styl']\n})\nexport class NgxMultiGaugeComponent implements OnInit {\n\n  @ViewChild('chart1') CHART1: ElementRef<any>;\n\n  constructor() { }\n\n  @Input() rawData = [ { title_en : 'prePro' , title_kr : 'ì ì²ë¦¬', value : 87 }, { title_en : 'cantPro', title_kr : 'ë¹ì²ë¦¬', value : 91 }];\n\n  sampleTitleEn = [];\n  sampleTitleKr = [];\n  sampleData    = [];\n  totalValue    = 0;\n\n  width = 500;\n  height = 500;\n  bg_color = \"#E5E5E5\";\n  line_color = \"#004C90\";\n  radius = this.height / 2;\n  angle_max = 0.75; // 100%ì ê¸°ì¤ ê¸¸ì´\n\n  list_margin = this.height / 16; // í­ëª©ê³¼ í­ëª© ì¬ì´ì ê±°ë¦¬\n  line_width = this.height / 50;  // ì ëì´\n  center_circle_size = this.height / 10; // ê°ì´ë° êµ¬ë© í¬ê¸°\n\n\n  svg: any;\n  pie: any;\n\n\n  ngOnInit() {\n\n    // ìì ì»´í¬ëí¸ì inputë°ì´í°ê° ìëì§ íì¸\n    // console.log(this.rawData);\n\n    // ë°ì ë°ì´í°ë¥¼ ê° ë¶ë¶ì¼ë¡ ëëì´ì¤\n    this.rawData.map( v => {\n      this.sampleTitleEn.push(v.title_en);\n      this.sampleTitleKr.push(v.title_kr);\n      this.sampleData.push(v.value);\n    });\n\n    // ì¢í© ë°ì´í°\n    this.totalValue = 0;\n    this.sampleData.map(v => {\n      this.totalValue += v;\n    });\n\n    const _CHART =  this.CHART1.nativeElement;\n\n    this.svg = d3.select(_CHART)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n\n    // ****************************  ì°¨í¸ë¶ë¶  ********************************** //\n    const arcs = this.sampleData.map((v, i) => {\n      const inner_calc = this.center_circle_size + ( i * this.list_margin + ((i - 1) * this.line_width ) + (this.list_margin + this.line_width) ); // i x ë§ì§ + ( (i-1) x ì ëì´ ) + (ë§ì§+ì ëì´)\n      const outer_calc = inner_calc + this.line_width;\n\n      return d3.arc()\n        .innerRadius( inner_calc )\n        .outerRadius( outer_calc )\n        .cornerRadius(this.line_width)\n        .padAngle(.07)\n        .padRadius(100);\n    });\n\n    const emptyPieData = this.sampleData.map((v, i) => {\n      v = 100;\n      return [\n        {value: v * this.angle_max        , arc : arcs[i]},   // value\n        {value: (100 - v) * this.angle_max, arc : arcs[i]},   // ëë¨¸ì§\n        {value: 100 * (1 - this.angle_max), arc : arcs[i]},   // ë¹ê³³\n      ];\n    });\n\n    const pieData = this.sampleData.map((v, i) => {\n      return [\n        {value: v * this.angle_max        , arc : arcs[i]},   // value\n        {value: (100 - v) * this.angle_max, arc : arcs[i]},   // ëë¨¸ì§\n        {value: 100 * (1 - this.angle_max), arc : arcs[i]},   // ë¹ê³³\n      ];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => {\n        // console.log(d);\n        return d[`value`];\n      });\n\n\n    // const test: any = [{ value : 80 }, { value : 0 }, { value : 20 }];\n    // console.log(pie(test));\n\n    // ë¹ ë°°ê²½ ë¼ì¸ë°\n    const empty_bg = this.svg.selectAll('.empty')\n      .data(emptyPieData)\n      .enter()\n      .append('g').classed('empty', true)\n      .attr('transform', `translate( ${ this.width / 2 }, ${ this.height / 2 } ) rotate(0)` )\n      .attr('fill-opacity', (d, i) => 2 / (i + 1));\n\n    empty_bg.selectAll('path').data(d => { return pie(d); })\n      .enter()\n      .append('path')\n      .attr('d', d => d.data.arc(d) )\n      .attr('fill', (d, i) => i === 0 ? this.bg_color : 'none' );\n\n\n\n    // ì¤ì  ë°ì´í° ë°\n    const g = this.svg.selectAll('.list')\n      .data(pieData)\n      .enter()\n      .append('g').classed('list', true)\n      .attr('transform', `translate( ${ this.width / 2 }, ${ this.height / 2 } ) rotate(0)` )\n      .attr('fill-opacity', (d, i) => 2 / (i + 1));\n\n    g.selectAll('path').data(d => { return pie(d); })\n      .enter()\n      .append('path')\n      .attr('d', d => d.data.arc(d) )\n      .attr('fill', (d, i) => i === 0 ? this.line_color : 'none' );\n\n\n\n    // íì¤í¸ ë¶ë¶ (ë°ì´í° ê°)\n    this.svg.selectAll('.empty').each( (d, index, _this) => {\n      const el = d3.select(_this[index]);\n      // console.log(el);\n      el.selectAll('path').each((r, i) => {\n        if( i === 1 ) {\n          const centroid  = r[`data`].arc.centroid({ startAngle: r[`startAngle`] + 0.05, endAngle : r[`startAngle`] + 0.001 + 0.05 });\n          const title_centroid = r[`data`].arc.centroid({ startAngle: 0, endAngle : 0 });\n          // console.log(`r=>`, r);\n          // console.log(`centroid1=>`, centroid);\n          // console.log(`centroid2=>`, centroid2);\n\n          // ë¹ì²ë¦¬ ì ì²ë¦¬ í­ëª©ì ì ëª© íì¤í¸\n          g.append('text')\n            .text( (v) => {\n              return `${ this.sampleTitleKr[index] }`;\n            })\n            .attr('transform', `translate(${title_centroid[0] - 5 },${title_centroid[1]})`)  // ëë°ë¡ ììë íì¤í¸\n            .attr('alignment-baseline', `middle`)\n            .attr('text-anchor', `end`);\n\n          // ê° í­ëª© ê° íì¤í¸ 20%, 50%\n          g.append('text')\n            .text( (v) => {\n              return `${ this.sampleData[index] }%`;\n            })\n            // .attr('transform', `translate(${centroid[0]},${centroid[1]}) rotate(${180 / Math.PI * (r[`startAngle`]) + 7})`)  // ë°ì ë§ì¶ì´ì íì ëì´ìë íì¤í¸\n            .attr('transform', `translate(${centroid[0] - 15},${centroid[1] - 5 })`)  // ëë°ë¡ ììë íì¤í¸\n            .attr('alignment-baseline', `middle`);\n\n        }\n\n      });\n    });\n\n\n\n\n    // ****************************  ê°ì´ë° ì ë¶ë¶  ********************************** //\n    this.svg.selectAll('circle')\n      .data(this.rawData)\n      .enter()\n      .append('circle')\n      .attr('cx',this.width / 2)\n      .attr('cy',this.height / 2)\n      .attr('r',this.radius / 4.5)\n      .attr('stroke', this.bg_color)\n      .attr('fill','none')\n      .attr('stroke-dasharray','3')\n      .attr('stroke-width',2);\n\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NgxMultiGaugeComponent } from './ngx-multi-gauge.component';\n\n@NgModule({\n  declarations: [NgxMultiGaugeComponent],\n  imports: [CommonModule],\n  exports: [NgxMultiGaugeComponent]\n})\nexport class NgxMultiGaugeModule { }\n"]}